package com.adsonlucas.SysEstoque.entities;

import java.io.Serializable;
import java.time.Instant;
import java.time.LocalDate;

import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.PrePersist;
import jakarta.persistence.PreUpdate;
import jakarta.persistence.Table;

@Entity
@Table(name = "tb_usuario")
public class User implements Serializable {
	private static final long serialVersionUID = 1L;
	
	// VARIÁVEIS
	
	@Id
	@GeneratedValue(strategy = GenerationType.IDENTITY)
	private Long ID;
	private String nome;
	private String sobrenome;
	private String senha;
	private String email;
	private Integer idade;
	private String foto;
	@Column(columnDefinition = "TIMESTAMP WITHOUT TIME ZONE")
	private LocalDate dt_nascimento;
	
	@Column(columnDefinition = "TIMESTAMP WITHOUT TIME ZONE")
	private Instant createAt;
	@Column(columnDefinition = "TIMESTAMP WITHOUT TIME ZONE")
	private Instant updateAt;
	
	// implementação posterior da categoria do usuário
	
	//CONSTRUTORES	
	public User() {}

	public User(Long iD, String nome, String sobrenome, String senha, String email, Integer idade, String foto,
			LocalDate dt_nascimento) {
		super();
		ID = iD;
		this.nome = nome;
		this.sobrenome = sobrenome;
		this.senha = senha;
		this.email = email;
		this.idade = idade;
		this.foto = foto;
		this.dt_nascimento = dt_nascimento;
	}

	//MÉTODOS
	public Long getID() {
		return ID;
	}

	public String getNome() {
		return nome;
	}

	public void setNome(String nome) {
		this.nome = nome;
	}

	public String getSobrenome() {
		return sobrenome;
	}

	public void setSobrenome(String sobrenome) {
		this.sobrenome = sobrenome;
	}

	public String getSenha() {
		return senha;
	}

	public void setSenha(String senha) {
		this.senha = senha;
	}

	public String getEmail() {
		return email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	public Integer getIdade() {
		return idade;
	}

	public void setIdade(Integer idade) {
		this.idade = idade;
	}

	public String getFoto() {
		return foto;
	}

	public void setFoto(String foto) {
		this.foto = foto;
	}

	public LocalDate getDt_nascimento() {
		return dt_nascimento;
	}

	public void setDt_nascimento(LocalDate dt_nascimento) {
		this.dt_nascimento = dt_nascimento;
	}

	// finalidade auditoria, inserção e atualização de cadastro
	public Instant getCreatedAt() {
		return createAt; //gravação de horário de inclusão de dados
	}	
	public Instant getUpdatedAt() {
		return updateAt; // gravação de horário de atualização de dados
	}
		
	@PrePersist
	public void prePersist() {
		createAt = Instant.now(); // antes de gravar no banco receberá o horário atual
	}
	
	@PreUpdate
	public void preUpdate() {
		updateAt = Instant.now(); // antes de atualizar no banco receberá o horário atual
	}

}
